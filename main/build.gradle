if (rootProject.ext.isAlone){
    apply plugin: 'com.android.application'
} else{
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion     rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        if (rootProject.ext.isAlone){
            applicationId "com.example.main"
        }
        minSdkVersion     rootProject.ext.android["minSdkVersion"]
        targetSdkVersion  rootProject.ext.android["compileSdkVersion"]
        versionCode       rootProject.ext.android["versionCode"]
        versionName       rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (rootProject.ext.isAlone){
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
//                java.srcDirs = ['src/main/java', 'src/main/module/java']
//                res.srcDirs = ['src/main/res', 'src/main/module/res']
            } else {
                //作为组件
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'com.example.main.debug/**'
                }
            }
        }
    }
}

kapt {
    arguments { arg("moduleName", project.getName()) }
}

dependencies {
    api project(':common')

    kapt rootProject.ext.dependencies["arouter-compiler"]
}
